// Generated by CoffeeScript 1.3.1
(function() {
  var contactCur, entryActions, exitActions, guards, headerCur, partyCur, util, xmlns_msg, _;

  _ = require('underscore');

  util = require('../../util/util');

  xmlns_msg = 'http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message';

  headerCur = {};

  partyCur = {};

  contactCur = {};

  entryActions = {
    'Header': function() {
      return headerCur = {};
    },
    'Header/Sender': function() {
      return partyCur = {};
    },
    'Header/Sender/Contact': function() {
      return contactCur = {};
    }
  };

  entryActions['Header/Receiver'] = entryActions['Header/Sender'];

  entryActions['Header/Receiver/Contact'] = entryActions['Header/Sender/Contact'];

  exitActions = {
    'Header': function() {
      return this.emitSDMX('header', headerCur);
    },
    'Header/ID': function() {
      return headerCur.id = this.stringBuffer;
    },
    'Header/Test': function() {
      return headerCur.test = this.stringBuffer === 'true';
    },
    'Header/Truncated': function() {},
    'Header/Name': function(attrs) {
      if (attrs['xml:lang'] == null) {
        attrs['xml:lang'] = 'en';
      }
      if (headerCur.name == null) {
        headerCur.name = {};
      }
      return headerCur.name[attrs['xml:lang']] = this.stringBuffer;
    },
    'Header/Prepared': function() {
      return headerCur.prepared = util.xmlDateToJavascriptDate(this.stringBuffer);
    },
    'Header/Sender': function(attrs) {
      if (headerCur.sender == null) {
        headerCur.sender = {};
      }
      partyCur.id = attrs.id;
      return headerCur.sender[attrs.id] = partyCur;
    },
    'Header/Sender/Name': function(attrs) {
      if (attrs['xml:lang'] == null) {
        attrs['xml:lang'] = 'en';
      }
      if (partyCur.name == null) {
        partyCur.name = {};
      }
      return partyCur.name[attrs['xml:lang']] = this.stringBuffer;
    },
    'Header/Sender/Contact': function() {
      if (partyCur.contact == null) {
        partyCur.contact = [];
      }
      return partyCur.contact.push(contactCur);
    },
    'Header/Sender/Contact/Name': function(attrs) {
      if (attrs['xml:lang'] == null) {
        attrs['xml:lang'] = 'en';
      }
      if (contactCur.name == null) {
        contactCur.name = {};
      }
      return contactCur.name[attrs['xml:lang']] = this.stringBuffer;
    },
    'Header/Sender/Contact/Department': function(attrs) {
      if (attrs['xml:lang'] == null) {
        attrs['xml:lang'] = 'en';
      }
      if (contactCur.department == null) {
        contactCur.department = {};
      }
      return contactCur.department[attrs['xml:lang']] = this.stringBuffer;
    },
    'Header/Sender/Contact/Role': function(attrs) {
      if (attrs['xml:lang'] == null) {
        attrs['xml:lang'] = 'en';
      }
      if (contactCur.role == null) {
        contactCur.role = {};
      }
      return contactCur.role[attrs['xml:lang']] = this.stringBuffer;
    },
    'Header/Sender/Contact/URI': function() {
      return contactCur.uri = this.stringBuffer;
    },
    'Header/Sender/Contact/X400': function() {
      return contactCur.x400 = this.stringBuffer;
    },
    'Header/Sender/Contact/Telephone': function() {
      return contactCur.telephone = this.stringBuffer;
    },
    'Header/Sender/Contact/Email': function() {
      return contactCur.email = this.stringBuffer;
    },
    'Header/Sender/Contact/Fax': function() {
      return contactCur.fax = this.stringBuffer;
    },
    'Header/Receiver': function(attrs) {
      if (headerCur.receiver == null) {
        headerCur.receiver = {};
      }
      partyCur.id = attrs.id;
      return headerCur.receiver[attrs.id] = partyCur;
    },
    'Header/KeyFamilyRef': function() {
      return headerCur.keyFamilyRef = this.stringBuffer;
    },
    'Header/KeyFamilyAgency': function() {
      return headerCur.keyFamilyAgency = this.stringBuffer;
    },
    'Header/DataSetAgency': function() {},
    'Header/DataSetID': function() {
      return headerCur.dataSetID = this.stringBuffer;
    },
    'Header/DataSetAction': function() {
      switch (this.stringBuffer) {
        case 'Update':
          return headerCur.dataSetAction = 'Append';
        default:
          return headerCur.dataSetAction = this.stringBuffer;
      }
    },
    'Header/Extracted': function() {
      return headerCur.extracted = util.xmlDateToJavascriptDate(this.stringBuffer);
    },
    'Header/ReportingBegin': function() {
      return headerCur.reportingBegin = this.stringBuffer;
    },
    'Header/ReportingEnd': function() {
      return headerCur.reportingEnd = this.stringBuffer;
    },
    'Header/Source': function(attrs) {
      if (attrs['xml:lang'] == null) {
        attrs['xml:lang'] = 'en';
      }
      if (headerCur.source == null) {
        headerCur.source = {};
      }
      return headerCur.source[attrs['xml:lang']] = this.stringBuffer;
    }
  };

  exitActions['Header/Receiver/Name'] = exitActions['Header/Sender/Name'];

  exitActions['Header/Receiver/Contact'] = exitActions['Header/Sender/Contact'];

  exitActions['Header/Receiver/Contact/Name'] = exitActions['Header/Sender/Contact/Name'];

  exitActions['Header/Receiver/Contact/Department'] = exitActions['Header/Sender/Contact/Department'];

  exitActions['Header/Receiver/Contact/Role'] = exitActions['Header/Sender/Contact/Role'];

  exitActions['Header/Receiver/Contact/URI'] = exitActions['Header/Sender/Contact/URI'];

  exitActions['Header/Receiver/Contact/X400'] = exitActions['Header/Sender/Contact/X400'];

  exitActions['Header/Receiver/Contact/Telephone'] = exitActions['Header/Sender/Contact/Telephone'];

  exitActions['Header/Receiver/Contact/Email'] = exitActions['Header/Sender/Contact/Email'];

  exitActions['Header/Receiver/Contact/Fax'] = exitActions['Header/Sender/Contact/Fax'];

  guards = {};

  exports.fst = _.extend({}, entryActions, exitActions, guards);

  exports.entryActions = entryActions;

  exports.exitActions = exitActions;

  exports.guards = guards;

}).call(this);
