// Generated by CoffeeScript 1.3.3
(function() {
  var Stream, WriteToArrayStream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Stream = require('stream').Stream;

  WriteToArrayStream = (function(_super) {

    __extends(WriteToArrayStream, _super);

    function WriteToArrayStream(items) {
      this.items = items != null ? items : [];
      this.writable = true;
    }

    WriteToArrayStream.prototype.write = function(data) {
      this.items.push(data);
      this.emit('data', data);
      return true;
    };

    WriteToArrayStream.prototype.end = function(data) {
      if (data != null) {
        this.items.push(data);
      }
      this.writable = false;
      return this.emit('end', data);
    };

    return WriteToArrayStream;

  })(Stream);

  exports.WriteToArrayStream = WriteToArrayStream;

}).call(this);
