// Generated by CoffeeScript 1.3.1
(function() {
  var _;

  _ = require('underscore');

  /*
  Converts a 2D array into object
  */


  exports.array2DToObject = function(array) {
    var tmp;
    tmp = {};
    _.each(array, function(arr) {
      return tmp[arr[0]] = arr[1];
    });
    return tmp;
  };

  /*
   * Return a Javascript Date for the given XML Schema date string.  Return
   * null if the date cannot be parsed.
   *
   * Does not know how to parse BC dates or AD dates < 100.
   *
   * Valid examples of input:
   * 2010-04-28T10:46:37.0123456789Z
   * 2010-04-28T10:46:37.37Z
   * 2010-04-28T10:46:37Z
   * 2010-04-28T10:46:37
   * 2010-04-28T10:46:37.012345+05:30
   * 2010-04-28T10:46:37.37-05:30
   * 1776-04-28T10:46:37+05:30
   * 0150-04-28T10:46:37-05:30
  */


  exports.xmlDateToJavascriptDate = function(xmlDate) {
    var all, day, direction, hour, match, milli, minute, month, offset_hour, offset_minute, offset_sign, re, second, utcDate, year, z_or_offset;
    re = /^([0-9]{4,})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]+)?(Z|([+-])([0-9]{2}):([0-9]{2}))?$/;
    match = xmlDate.match(re);
    if (!match) {
      return null;
    }
    all = match[0];
    year = match[1];
    month = match[2];
    day = match[3];
    hour = match[4];
    minute = match[5];
    second = match[6];
    milli = match[7];
    z_or_offset = match[8];
    offset_sign = match[9];
    offset_hour = match[10];
    offset_minute = match[11];
    utcDate = new Date(Date.UTC(year, month - 1, day, hour, minute, second, milli || 0));
    if (offset_sign) {
      direction = offset_sign === '+' ? 1 : -1;
      utcDate.setUTCHours(utcDate.getUTCHours() + (offset_hour * direction));
      utcDate.setUTCMinutes(utcDate.getUTCMinutes() + (offset_minute * direction));
    }
    return utcDate;
  };

}).call(this);
