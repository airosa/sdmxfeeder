// Generated by CoffeeScript 1.3.1
(function() {
  var DebugHandler, SDMXStream,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  SDMXStream = require('../sdmxStream').SDMXStream;

  DebugHandler = (function(_super) {

    __extends(DebugHandler, _super);

    DebugHandler.name = 'DebugHandler';

    function DebugHandler(log) {
      this.write = __bind(this.write, this);
      DebugHandler.__super__.constructor.apply(this, arguments);
    }

    DebugHandler.prototype.write = function(sdmxdata) {
      this.log.debug("" + this.constructor.name + " " + sdmxdata.type + " " + this.counters[sdmxdata.type] + " " + sdmxdata.sequenceNumber);
      return DebugHandler.__super__.write.apply(this, arguments);
    };

    return DebugHandler;

  })(SDMXStream);

  exports.DebugHandler = DebugHandler;

}).call(this);
