// Generated by CoffeeScript 1.3.1
(function() {
  var Stream, WriteToStringStream,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  Stream = require('stream').Stream;

  WriteToStringStream = (function(_super) {

    __extends(WriteToStringStream, _super);

    WriteToStringStream.name = 'WriteToStringStream';

    function WriteToStringStream(string) {
      this.string = string != null ? string : '';
      this.writable = true;
      this.readable = true;
    }

    WriteToStringStream.prototype.write = function(string) {
      this.string += string;
      this.emit('data', string);
      return true;
    };

    WriteToStringStream.prototype.end = function(string) {
      this.atEnd = true;
      if (string != null) {
        this.string += string;
      }
      this.writable = false;
      return this.emit('end');
    };

    WriteToStringStream.prototype.destroy = function() {
      return this.writable = false;
    };

    return WriteToStringStream;

  })(Stream);

  exports.WriteToStringStream = WriteToStringStream;

}).call(this);
