// Generated by CoffeeScript 1.3.1
(function() {
  var CheckPipe, GenericCheckPipe, schemas,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  CheckPipe = require('./checkPipe').CheckPipe;

  schemas = require('./genericSchemas').schemas;

  GenericCheckPipe = (function(_super) {

    __extends(GenericCheckPipe, _super);

    GenericCheckPipe.name = 'GenericCheckPipe';

    function GenericCheckPipe(log) {
      GenericCheckPipe.__super__.constructor.apply(this, arguments);
    }

    GenericCheckPipe.prototype.loadSchemas = function() {
      var schema, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = schemas.length; _i < _len; _i++) {
        schema = schemas[_i];
        _results.push(this.jsvenv.createSchema(schema));
      }
      return _results;
    };

    GenericCheckPipe.prototype.findSchema = function(type) {
      return this.jsvenv.findSchema('urn:sdmxfeeder.infomodel.' + type);
    };

    return GenericCheckPipe;

  })(CheckPipe);

  exports.GenericCheckPipe = GenericCheckPipe;

}).call(this);
